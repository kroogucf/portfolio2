{"version":3,"sources":["components/AllTodos.js","components/newTodo.js","components/MainTodo.js","components/LoginApp.js","components/NewJournalPost.js","components/JournalPost.js","components/JournalMain.js","App.js"],"names":["AllTodos","props","todoStyle","item","completed","styles","completeTodo","incompleteTodo","TouchableOpacity","style","onPress","handleToggle","Text","text","checked","description","date","StyleSheet","create","fontColor","backgroundColor","paddingBottom","marginTop","borderColor","borderWidth","borderRadius","NewTodo","submitNewTodo","useState","setNewText","setNewDate","View","TextInput","input","placeholder","onChangeText","value","Button","title","color","marginBottom","paddingHorizontal","paddingVertical","borderBottomWidth","borderBottomColor","MainTodo","key","data","setNewTodos","useEffect","console","log","SafeAreaView","container","FlatList","renderItem","itemkey","newData","map","prevTodos","Math","random","toString","flex","height","paddingTop","fontSize","textAlign","LoginApp","error","textField","padding","fontWeight","margin","welcomeSuccess","usernameText","welcomeText","loggedIn","setLoggedIn","username","setUsername","errorMessage","setErrorMessage","passRef","useRef","userRef","notLoggedInScreen","ref","current","loggedInScreen","length","NewJournalPost","setNewTitle","submitNewJournal","JournalPost","view","titleText","dateText","JournalMain","setNewJournals","prevJournals","HomeScreen","alignItems","justifyContent","navigation","navigate","TodosScreen","JournalScreen","Stack","createStackNavigator","App","NavigationContainer","Navigator","Screen","name","component"],"mappings":"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","file":"static/js/app.16275e7a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\r\nimport { CheckBox } from 'react-native-elements';\r\n\r\nexport default function AllTodos(props) {\r\n\r\n    let todoStyle;\r\n    if (props.item.completed) {\r\n        todoStyle = styles.completeTodo\r\n    } else {\r\n        todoStyle = styles.incompleteTodo\r\n    }\r\n    return(\r\n        <TouchableOpacity style={todoStyle} onPress={props.handleToggle}>\r\n            <Text style={styles.text}><CheckBox onPress={props.handleToggle} checked={props.item.completed} />{props.item.description}</Text>\r\n            <Text style={styles.text}>{\"Date: \"+props.item.date}</Text>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        fontColor: \"black\",\r\n    },\r\n    completeTodo: {\r\n        backgroundColor: \"green\",\r\n        paddingBottom: 10,\r\n        marginTop: 10,\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n    },\r\n    incompleteTodo: {\r\n        backgroundColor: \"lightgray\",\r\n        paddingBottom: 10,\r\n        marginTop: 10,\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n    },\r\n})","import React, { useState } from 'react';\r\nimport { StyleSheet, Text, TextInput, Button, View } from 'react-native';\r\n\r\nexport default function NewTodo({ submitNewTodo }) {\r\n\r\n    let [text, setNewText] = useState('');\r\n    let [date, setNewDate] = useState('');\r\n\r\n    const newTodoText = (value) => {\r\n        setNewText(value);\r\n    }\r\n\r\n    return(\r\n        <View>\r\n            <TextInput \r\n            style={styles.input}\r\n            placeholder='add a new todo'\r\n            onChangeText={newTodoText}\r\n            >  \r\n            </TextInput>\r\n            <TextInput\r\n            style={styles.input}\r\n            placeholder='date'\r\n            onChangeText={setNewDate}\r\n            >\r\n            </TextInput>\r\n        <Button \r\n        onPress={() => submitNewTodo(text, date)} \r\n        title='add a new todo'\r\n        color='blue'>\r\n        </Button>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        marginBottom: 10,\r\n        paddingHorizontal: 8,\r\n        paddingVertical: 6,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: 'black',\r\n    },\r\n})","import React, {useState, useEffect} from 'react';\r\nimport { StyleSheet, Text, FlatList, SafeAreaView } from 'react-native';\r\nimport AllTodos from './AllTodos';\r\nimport NewTodo from './newTodo';\r\n\r\n\r\nexport default function MainTodo() {\r\n\r\n  let [data, setNewTodos] = useState([\r\n    {\r\n      key: '1',\r\n      completed: false,\r\n      description: \"Watch episode 3 of Falcon and the Winter Soldier\",\r\n      date: \"two days ago\",\r\n    },\r\n    {\r\n      key: '2',\r\n      completed: false,\r\n      description: \"Eat at Tin and Taco, because it is fantastic\",\r\n      date: \"yesterday\",\r\n    },\r\n    {\r\n      key: '3',\r\n      completed: false,\r\n      description: \"Watch Godzilla Vs Kong for a second time because why not\",\r\n      date: \"this morning\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {console.log(data)}, [data])\r\n\r\n  const handleToggle = (itemkey) => {\r\n\r\n    const newData = data.map((item) => {\r\n\r\n      if (item.key === itemkey) {\r\n        const updateItem = {\r\n          ...item,\r\n          completed: !item.completed,\r\n        };\r\n        return updateItem;\r\n      }\r\n\r\n      return item;\r\n\r\n    })\r\n\r\n    setNewTodos(newData)\r\n\r\n  }\r\n\r\n  const submitNewTodo = (text, date) => {\r\n    setNewTodos((prevTodos) => {\r\n      return [\r\n        { key: Math.random().toString(), completed:false, description: text, date: date},\r\n        ...prevTodos\r\n      ]\r\n    })\r\n  }\r\n\r\nreturn (\r\n    (<SafeAreaView style={styles.container}>\r\n      <Text style={styles.title}>TODO APP</Text>\r\n      <FlatList\r\n        data={data} \r\n        renderItem={({ item }) => (\r\n          <AllTodos item={item} handleToggle={()=>{handleToggle(item.key)}} />\r\n        )}>\r\n      </FlatList>\r\n      <NewTodo submitNewTodo={submitNewTodo}></NewTodo>\r\n    </SafeAreaView>)\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'lightgray',\r\n  },\r\n  title: {\r\n    height: 80,\r\n    paddingTop: 25,\r\n    backgroundColor: 'blue',\r\n    color: 'white',\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n  },\r\n\r\n});\r\n","import { Button, TextInput, View, Text, StyleSheet } from \"react-native\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\n// This code is modified from the week 10 development assignment that asked to create a login page with a specific password.\r\n// I changed the 'Ch@rge!' password part to accept any password and username combination to login as long as something was entered.\r\n// I also added some styling to the welcome and username message once logged in.\r\n// I also added logout functionality\r\n\r\nexport default function LoginApp() {\r\n    const styles = StyleSheet.create({\r\n        error: {\r\n            color: \"#F05D5E\",\r\n        },\r\n        textField: {\r\n            padding: 10,\r\n            backgroundColor: \"#ccc\",\r\n            fontWeight: 600,\r\n            margin: 10,\r\n        },\r\n        welcomeSuccess: {\r\n            marginBottom: 10,\r\n            padding: 5,\r\n            borderBottomWidth: 1,\r\n            backgroundColor: '#90EE90',\r\n            borderBottomColor: 'black',\r\n            borderRadius: 10,\r\n        },\r\n        usernameText: {\r\n            textAlign: 'center',\r\n            fontWeight: 'bold',\r\n        },\r\n        welcomeText: {\r\n            textAlign: 'center',\r\n        }\r\n    }\r\n\r\n    );\r\n\r\n    let doLogin = () => {\r\n        if (!userRef.current.value) {\r\n            setErrorMessage(\"You left username blank\")\r\n            return\r\n        } else {\r\n            \r\n        }\r\n\r\n        if (!passRef.current.value) {\r\n            setErrorMessage(\"You left password blank!\")\r\n        } else {\r\n            console.log(\"Valid Password!\")\r\n            setUsername(userRef.current.value)\r\n            setErrorMessage(\"\")\r\n            setLoggedIn(true)\r\n        }\r\n\r\n    }\r\n\r\n    let doLogout = () => {\r\n        if (username.length > 0) {\r\n            setLoggedIn(false)\r\n        }\r\n    }\r\n\r\n    let [loggedIn,setLoggedIn] = useState(false)\r\n    let [username, setUsername] = useState(\"\")\r\n    let [errorMessage, setErrorMessage] = useState(\"\")\r\n    let passRef = useRef(null)\r\n    let userRef = useRef(null)\r\n\r\n    let notLoggedInScreen = (\r\n        <View>\r\n            <TextInput style={styles.textField} ref={userRef} placeholder=\"Username\"></TextInput>\r\n            <TextInput style={styles.textField} ref={passRef} placeholder=\"Password\"></TextInput>\r\n            <Button onPress={doLogin} title=\"Login\"></Button>\r\n            <Text style={styles.error}>{errorMessage}</Text>\r\n        </View>\r\n    )\r\n    let loggedInScreen = (\r\n        <View style={styles.welcomeSuccess}>\r\n            <Text style={styles.welcomeText}>Welcome,</Text>\r\n            <Text style={styles.usernameText}>{username}.</Text>\r\n            <Text>You can view and add to your todo sheet or access your personalized journal below.</Text>\r\n            <Button onPress={doLogout} title=\"Logout\"></Button>\r\n        </View>\r\n    )\r\n    return !loggedIn ? notLoggedInScreen : loggedInScreen\r\n}","import { setStatusBarNetworkActivityIndicatorVisible } from \"expo-status-bar\";\r\nimport React, { useState } from \"react\";\r\nimport { StyleSheet, Text, TextInput, Button, View} from \"react-native\";\r\n\r\nexport default function NewJournalPost(props) {\r\n    \r\n    let [title, setNewTitle] = useState('');\r\n    let [text, setNewText] = useState('');\r\n    let [date, setNewDate] = useState('');\r\n\r\n    const newJournalPost = (value) => {\r\n        setNewText(value);\r\n    }\r\n    const newJournalTitle = (value) => {\r\n        setNewTitle(value);\r\n    }\r\n    const newJournalDate = (value) => {\r\n        setNewDate(value);\r\n    }\r\n\r\n    return(\r\n        <View>\r\n            <TextInput style={styles.input}\r\n                placeholder=\"Name This Entry\"\r\n                onChangeText={newJournalTitle}\r\n                >\r\n            </TextInput>\r\n            <TextInput style={styles.input}\r\n                placeholder=\"Write your entry.\"\r\n                onChangeText={newJournalPost}\r\n                >\r\n            </TextInput>\r\n            <TextInput style={styles.input}\r\n                placeholder=\"Date this entry\"\r\n                onChangeText={newJournalDate}\r\n                >\r\n            </TextInput>\r\n            <Button\r\n                onPress={() => {props.submitNewJournal(title, text, date)}}\r\n                title=\"Add a New Journal Entry\"\r\n                >\r\n            </Button>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        padding: 10,\r\n        backgroundColor: \"#ccc\",\r\n        fontWeight: 600,\r\n        margin: 5,\r\n    },\r\n})","import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, TextInput, Button, View} from \"react-native\";\r\n\r\nexport default function JournalPost(props) {\r\n\r\n    let [title, setTitle] = useState(props.item.title);\r\n    let [date, setDate] = useState(props.item.date);\r\n    let [text, setText] = useState(props.item.text);\r\n\r\n    return(\r\n        <View style={styles.view}>\r\n            <Text style={styles.titleText}>{title}</Text>\r\n            <Text style={styles.dateText}>{date}</Text>\r\n            <Text style={styles.text}>{text}</Text>\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    view: {\r\n        marginBottom: 10,\r\n        padding: 5,\r\n        borderBottomWidth: 1,\r\n        backgroundColor: '#9BCAF2',\r\n        borderBottomColor: 'black',\r\n        borderRadius: 10,\r\n    },\r\n    text: {\r\n        fontSize: 14,\r\n    },\r\n    dateText: {\r\n        fontSize: 12,\r\n    },\r\n    titleText: {\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n    }\r\n})","import React, { useState } from 'react';\r\nimport { StyleSheet, Text, FlatList, SafeAreaView} from \"react-native\";\r\nimport JournalPost from './JournalPost';\r\nimport NewJournalPost from './NewJournalPost';\r\n\r\nexport default function JournalMain() {\r\n\r\n    let [data, setNewJournals] = useState([]);\r\n\r\n    return((<SafeAreaView style={styles.view}>\r\n        <FlatList\r\n          data={data} \r\n          renderItem={({ item }) => (\r\n            <JournalPost item={item} />\r\n          )}>\r\n        </FlatList>\r\n        <NewJournalPost submitNewJournal={(title, text, date) => {\r\n        setNewJournals((prevJournals) => {\r\n          return [\r\n            { key: Math.random().toString(), text: text, date: date, title: title},\r\n            ...prevJournals\r\n          ]\r\n        })\r\n      }}></NewJournalPost>\r\n      </SafeAreaView>));\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    view: {\r\n        marginBottom: 10,\r\n        marginTop: 10,\r\n        paddingTop: 8,\r\n        paddingBottom: 20,\r\n        borderRadius: 15,\r\n        backgroundColor: '#2594F2',\r\n    },\r\n})","import React, {useState, useEffect} from 'react';\nimport { View, StyleSheet, Text, FlatList, SafeAreaView } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport MainTodo from './components/MainTodo';\nimport LoginApp from './components/LoginApp';\nimport NewJournalPost from './components/NewJournalPost';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport JournalMain from './components/JournalMain';\n\n  function HomeScreen(props) {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', padding: 10,}}>\n        <Text>Home Screen</Text>\n        <LoginApp />\n        <Button\n          style={{padding: 10,}}\n          title=\"Todos\"\n          onPress={() => props.navigation.navigate('Todos')}\n        />\n        <Button\n          title=\"Journal\"\n          onPress={() => props.navigation.navigate('Journal')}\n        />\n      </View>\n    );\n  }\n  \n  function TodosScreen(props) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', padding: 10, }}>\n        <Text>Todos!</Text>\n        <MainTodo />\n        <Button\n          style={{padding: 10,}}\n          title=\"Back to Home\"\n          onPress={() => props.navigation.navigate('Home')}\n        />\n      </View>\n    );\n  }\n\n  function JournalScreen(props) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', padding: 10, }}>\n        <Text>Journal</Text>\n        <JournalMain />\n        <Button\n          style={{padding: 10,}}\n          title=\"Back to Home\"\n          onPress={() => props.navigation.navigate('Home')}\n        />\n      </View>\n    );\n  }\n  \n  const Stack = createStackNavigator();\n  \n  function App() {\n    return (\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          <Stack.Screen name=\"Todos\" component={TodosScreen} />\n          <Stack.Screen name=\"Journal\" component={JournalScreen} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n  }\n\n  export default App;"],"sourceRoot":""}